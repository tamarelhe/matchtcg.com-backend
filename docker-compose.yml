version: '3.8'

services:
  postgres:
    image: postgis/postgis:15-3.3
    container_name: matchtcg-postgres
    environment:
      POSTGRES_DB: matchtcg
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d matchtcg"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - matchtcg-network

  postgres-test:
    image: postgis/postgis:15-3.3
    container_name: matchtcg-postgres-test
    environment:
      POSTGRES_DB: matchtcg_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"
    volumes:
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d matchtcg_test"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - matchtcg-network
    profiles:
      - test

  redis:
    image: redis:7-alpine
    container_name: matchtcg-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - matchtcg-network
    profiles:
      - cache

  mailhog:
    image: mailhog/mailhog:latest
    container_name: matchtcg-mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - matchtcg-network
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:

networks:
  matchtcg-network:
    driver: bridge